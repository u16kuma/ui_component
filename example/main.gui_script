local component = require "ui_component.ecs.component"
local entity = require "ui_component.ecs.entity"
local entity_manager = require "ui_component.ecs.entity_manager"
local event_trigger = require "ui_component.components.event_trigger"
local button = require "ui_component.components.button"
local toggle = require "ui_component.components.toggle"
local toggle_group = require "ui_component.components.toggle_group"
local gauge = require "ui_component.components.gauge"

local function create_button_animation()
	local instance = component.new("button_animation")
	instance.start = function(self)
		local trigger = self.entity:get_component("event_trigger")
		local button = self.entity:get_component("button")
		trigger.pointer_down:add(function(data)
			if button.interactive then
				local n = gui.get_node(data.id)
				gui.animate(n, gui.PROP_SCALE, vmath.vector3(0.96), gui.EASING_OUTBACK, 0.2)
			end
		end)
		trigger.pointer_up:add(function(data)
			if button.interactive then
				local n = gui.get_node(data.id)
				gui.animate(n, gui.PROP_SCALE, vmath.vector3(1), gui.EASING_OUTBACK, 0.2)
			end
		end)
		trigger.pointer_click:add(function(data)
			if button.interactive then
				local n = gui.get_node(data.id)
				gui.animate(n, gui.PROP_SCALE, vmath.vector3(1), gui.EASING_OUTBACK, 0.2)
			end
		end)
	end
	return instance
end

local function create_toggle_animation()
	local instance = component.new("toggle_animation")
	instance.start = function(self)
		local toggle = self.entity:get_component("toggle")
		toggle.on_value_changed:add(function(data)
			local n = gui.get_node(data.id)
			if data.is_on then
				gui.set_color(n, vmath.vector3(0.3, 1, 0.3))
			else 
				gui.set_color(n, vmath.vector3(1))
			end
		end)
	end
	return instance
end

local function make_ui(self)
	self.entity_manager = entity_manager.new()

	self.entity_manager:add(entity.new("button", {
		button.new(),
		event_trigger.new(),
		create_button_animation(),
	}))
	self.entity_manager:add(entity.new("toggle", {
		button.new(),
		event_trigger.new(),
		toggle.new(),
		create_toggle_animation(),
		create_button_animation(),
	}))

	do
		self.entity_manager:add(entity.new("toggle1", {
			button.new(),
			event_trigger.new(),
			toggle.new(),
			create_toggle_animation(),
			create_button_animation(),
		}))
		self.entity_manager:add(entity.new("toggle2", {
			button.new(),
			event_trigger.new(),
			toggle.new(),
			create_toggle_animation(),
			create_button_animation(),
		}))
		self.entity_manager:add(entity.new("toggle3", {
			button.new(),
			event_trigger.new(),
			toggle.new(),
			create_toggle_animation(),
			create_button_animation(),
		}))
		self.entity_manager:add(entity.new("toggle4", {
			button.new(),
			event_trigger.new(),
			toggle.new(),
			create_toggle_animation(),
			create_button_animation(),
		}))
		self.entity_manager:add(entity.new("toggle5", {
			button.new(),
			event_trigger.new(),
			toggle.new(),
			create_toggle_animation(),
			create_button_animation(),
		}))
		self.entity_manager:add(entity.new("toggle_group", {
			toggle_group.new()
		}))

		local toggle_group = self.entity_manager:get("toggle_group"):get_component("toggle_group")
		toggle_group:register_toggle(self.entity_manager:get("toggle1"):get_component("toggle"))
		toggle_group:register_toggle(self.entity_manager:get("toggle2"):get_component("toggle"))
		toggle_group:register_toggle(self.entity_manager:get("toggle3"):get_component("toggle"))
		toggle_group:register_toggle(self.entity_manager:get("toggle4"):get_component("toggle"))
		toggle_group:register_toggle(self.entity_manager:get("toggle5"):get_component("toggle"))
	end

	do
		self.entity_manager:add(entity.new("gauge_down_button", {
			button.new(),
			event_trigger.new(),
			create_button_animation(),
		}))
		self.entity_manager:add(entity.new("gauge_up_button", {
			button.new(),
			event_trigger.new(),
			create_button_animation(),
		}))
		self.entity_manager:add(entity.new("gauge", {
			gauge.new("gauge_fill", "gauge_background", 80, 50, 100)
		}))

		-- 「-」ボタンが押されたらvalueを引く
		self.entity_manager:get("gauge_down_button"):get_component("button").on_click:add(function()
			local g = self.entity_manager:get("gauge"):get_component("gauge")
			g.value = g.value - 1
		end)
		-- 「+」ボタンが押されたらvalueに足す
		self.entity_manager:get("gauge_up_button"):get_component("button").on_click:add(function()
			local g = self.entity_manager:get("gauge"):get_component("gauge")
			g.value = g.value + 1
		end)
		-- ゲージの値が変わったときにテキストを変更する
		self.entity_manager:get("gauge"):get_component("gauge").on_value_changed:add(function(v)
			local n = gui.get_node("gauge_value")
			gui.set_text(n, v)
		end)

		local n = gui.get_node("gauge_value")
		gui.set_text(n, 80)
	end

	self.entity_manager:start()
end

function init(self)
	msg.post("@render:", "clear_color", {
		color = vmath.vector4(0.93, 0.93, 0.93, 0)
	})
	msg.post(".", "acquire_input_focus")

	make_ui(self)
end

function on_input(self, action_id, action)
	self.entity_manager:on_input(action_id, action)
end